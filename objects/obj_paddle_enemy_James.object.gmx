<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_paddle_enemy_James</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///just adjust image speed
image_speed = 12;
timer = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///ball bounce angles and paddle glow effect


ballDistance = abs(obj_paddle_enemy_James.y - obj_ball_James.y);
middleDistance = obj_paddle_enemy_James.y - 380;

//ball bounce is badly named
//basically the argument it takes is like the speed that the paddle moves towards the ball

if (global.difficultyLevel &lt; 60)
{
    difficultyFactor = 0.85
}
 

{
    if (ballDistance &gt; 60)
    {
        ball_bounce(18 * (0.81 + global.difficultyLevel * 0.0019));
        }
    else if (ballDistance &lt; 60) &amp;&amp; (ballDistance &gt; 20)
    {
        ball_bounce(10 * (0.6 + global.difficultyLevel * 0.004));
    }
     else if (ballDistance &lt; 20)  &amp;&amp; (ballDistance &gt; 10)
    {
        ball_bounce(5 * (0.6 + global.difficultyLevel * 0.004));
    }
    else if (ballDistance &lt; 10)
    {
        ball_bounce(ballDistance + 0.1);
    }

   
}

        



if sprite_index = spr_bounce_enemy_James
{
    image_speed = 1;
    timer += 1
    if timer == 6
    {
         sprite_index = spr_paddle_enemy_James;
         image_speed = 12;
         timer = 0;
    }
}




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///just draw self
draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>65,65</point>
  </PhysicsShapePoints>
</object>
