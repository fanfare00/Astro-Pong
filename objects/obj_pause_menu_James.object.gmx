<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_popup_menu_James</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create surface, draw everything to it, deactivate all other instances
//gameEnding = false;

surf = surface_create( room_width, room_height );


surface_set_target(surf);

//pause all particle effects
part_system_automatic_update(obj_particle_trail_James.trail, false);
part_system_automatic_update(obj_particle_trail_James.bounce, false);
part_system_automatic_update(obj_particle_trail_James.blast, false);

//clear surface
draw_clear_alpha(c_black, 0); 

//draw everything visible to surface
with(all) 
{ 
    if (visible == true) 
    { 
        event_perform(ev_draw,0);
    } 
}  
surface_reset_target();

//deactivate all instances
instance_deactivate_all(true);
visible = true;

background_vspeed[0] = 0;
background_hspeed[0] = 0;

if (global.playerScore == 10) or (global.enemyScore == 10)
{
    var newMessage;
    newMessage = instance_create(0,0, obj_message_James);
    with (newMessage)
    {
        message = "end";
        
    }
    exit;
}
else

//create 3 new buttons for pause menu
var newButton;

 newButton = instance_create(511, 355, obj_button_James);
 with (newButton)
    {
        action = "resume"
        bigButton = false;

    }
    
 newButton = instance_create(511, 414, obj_button_James);
 with (newButton)
    {
        action = "options"
        bigButton = false;

    }

 newButton = instance_create(511, 474, obj_button_James);
 with (newButton)
    {
        action = "main menu"
        bigButton = false;

    }
    

    

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///just redrawing all the instances to the surface if the surface is lost

surface_set_target(surf);
draw_clear_alpha(c_black, 0);
with(all) { if (visible == true) { event_perform(ev_draw,0); } }
surface_reset_target();

instance_deactivate_all(true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>obj_pause_menu_James</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the surface to the screen

//make sure to get surface if screen loses focus
if (surface_exists(surf))
{   
    draw_surface(surf, 0, 0);
}
else
{
    //if the surface gets lost recreate it and redraw all instances
    instance_activate_all();
    surf = surface_create( room_width, room_height );
    alarm[0] = 1; // make appear on the screen for 1 step just to be redrawn
}

if (global.playerScore == 10) or (global.enemyScore == 10)
{
    exit;
}

//Draws a transparent rectangle over everything
draw_set_color(c_black);
draw_set_alpha(0.6);
draw_rectangle(0,0,room_width,room_height,0);
draw_set_alpha(1);



//draw pause menu on top
draw_sprite(spr_popup_menu_James, 0, 369, 210);


//draw_sprite_ext( spr_button_James, glow, 511, 460, 0.7, 0.7, 0, -1, 1 );

draw_set_halign(fa_center);
draw_set_valign(fa_center);
draw_set_font(fnt_names);
draw_text_transformed_color(511, 280, "Paused", 1, 1, 0, c_lime, c_lime, c_lime, c_lime, 0.9);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Unpause, clear surface, re-activate all objects.


surface_free(surf);

// Activate all the objects again
instance_activate_all(); 

//destroy self
instance_destroy();

//unpause all particle effects
part_system_automatic_update(obj_particle_trail_James.trail, true);
part_system_automatic_update(obj_particle_trail_James.bounce, true);
part_system_automatic_update(obj_particle_trail_James.blast, true);


background_hspeed[0] = -1;
background_vspeed[0] = 1;

with (obj_button_James)
{
     instance_destroy();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>165,165</point>
  </PhysicsShapePoints>
</object>
